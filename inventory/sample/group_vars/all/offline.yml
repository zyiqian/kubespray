---
## Global Offline settings
### Private Container Image Registry
registry_host: "aicloud-nexus.midea.com:10010"
files_repo: "http://aicloud-nexus.midea.com/repository/public-ftp"
### If using CentOS, RedHat or Fedora
yum_repo: "http://aicloud-nexus.midea.com/repository/alicoud-yum-repo"
### If using Debian
# debian_repo: "http://myinternaldebianrepo"
### If using Ubuntu
# ubuntu_repo: "http://myinternalubunturepo"

## Container Registry overrides
kube_image_repo: "{{ registry_host }}"
gcr_image_repo: "{{ registry_host }}"
docker_image_repo: "{{ registry_host }}"
quay_image_repo: "{{ registry_host }}"

## Kubernetes components
kubeadm_download_url: "{{ files_repo }}/kubernetes/package/{{ kube_version }}/kubeadm"
kubectl_download_url: "{{ files_repo }}/kubernetes/package/{{ kube_version }}/kubectl"
kubelet_download_url: "{{ files_repo }}/kubernetes/package/{{ kube_version }}/kubelet"

## CNI Plugins
cni_download_url: "{{ files_repo }}/kubernetes/package/cni/cni-plugins-linux-{{ image_arch }}-{{ cni_version }}.tgz"

## cri-tools
crictl_download_url: "{{ files_repo }}/kubernetes/package/cri-tools/crictl-v1.20.0-linux-amd64.tar.gz"

## [Optional] etcd: only if you **DON'T** use etcd_deployment=host
etcd_download_url: "{{ files_repo }}/kubernetes/package/etcd/etcd-{{ etcd_version }}-linux-amd64.tar.gz"

# [Optional] Calico: If using Calico network plugin
calicoctl_download_url: "{{ files_repo }}/kubernetes/package/calico/{{ calico_ctl_version }}/calicoctl-linux-{{ image_arch }}"
# [Optional] Calico with kdd: If using Calico network plugin with kdd datastore
calico_crds_download_url: "{{ files_repo }}/kubernetes/package/calico/{{ calico_version }}.tar.gz"

# [Optional] helm: only if you set helm_enabled: true
# helm_download_url: "{{ files_repo }}/helm-{{ helm_version }}-linux-{{ image_arch }}.tar.gz"

# [Optional] crun: only if you set crun_enabled: true
# crun_download_url: "{{ files_repo }}/containers/crun/releases/download/{{ crun_version }}/crun-{{ crun_version }}-linux-{{ image_arch }}"

# [Optional] kata: only if you set kata_containers_enabled: true
# kata_containers_download_url: "{{ files_repo }}/kata-containers/runtime/releases/download/{{ kata_containers_version }}/kata-static-{{ kata_containers_version }}-{{ ansible_architecture }}.tar.xz"

## CentOS/Redhat
### For EL7, base and extras repo must be available, for EL8, baseos and appstream
### By default we enable those repo automatically
# rhel_enable_repos: false
### Docker / Containerd
docker_rh_repo_base_url: "http://aicloud-nexus.midea.com/repository/docker-ce-repo/$releasever/$basearch/stable"
docker_rh_repo_gpgkey: "http://aicloud-nexus.midea.com/repository/docker-ce-repo/gpg"

## Fedora
### Docker
docker_fedora_repo_base_url: "http://aicloud-nexus.midea.com/repository/docker-ce-repo/{{ ansible_distribution_major_version }}/{{ ansible_architecture }}"
docker_fedora_repo_gpgkey: "http://aicloud-nexus.midea.com/repository/docker-ce-repo/gpg"
### Containerd
containerd_fedora_repo_base_url: "http://aicloud-nexus.midea.com/repository/docker-ce-repo/containerd"
containerd_fedora_repo_gpgkey: "http://aicloud-nexus.midea.com/repository/docker-ce-repo/gpg"

## Debian
### Docker
# docker_debian_repo_base_url: "{{ debian_repo }}/docker-ce"
# docker_debian_repo_gpgkey: "{{ debian_repo }}/docker-ce/gpg"
### Containerd
# containerd_debian_repo_base_url: "{{ ubuntu_repo }}/containerd"
# containerd_debian_repo_gpgkey: "{{ ubuntu_repo }}/containerd/gpg"
# containerd_debian_repo_repokey: 'YOURREPOKEY'

## Ubuntu
### Docker
# docker_ubuntu_repo_base_url: "{{ ubuntu_repo }}/docker-ce"
# docker_ubuntu_repo_gpgkey: "{{ ubuntu_repo }}/docker-ce/gpg"
### Containerd
# containerd_ubuntu_repo_base_url: "{{ ubuntu_repo }}/containerd"
# containerd_ubuntu_repo_gpgkey: "{{ ubuntu_repo }}/containerd/gpg"
# containerd_ubuntu_repo_repokey: 'YOURREPOKEY'
